[user]
  name = Christopher Swenson
  # email = cswenson@twilio.com
  email = chris@caswenson.com
  signingkey = 7A726488

[color]
	ui = true

[push]
  default = tracking

[branch]
  autosetuprebase = always

[help]
  autocorrect = 10

[code]

[core]
  excludesfile = /Users/swenson/.gitignore
	pager = /home/swenson/bin/diff-so-fancy | less --tabs=4 -RFX

[mergetool]
  keepBackup = true

[filter "media"]
  required = true
  clean = git media clean %f
  smudge = git media smudge %f

[hub]
  protocol = https

[url "git@github.com:"]
  insteadOf = https://github.com/

[alias]
  ap = add -p
  b = branch
  ci = commit -v
  cam = commit -a -m
  co = checkout
  d = diff --patience
  lc = log ORIG_HEAD.. --stat --no-merges
  lp = log --patch-with-stat
  unmerged = branch --no-merge
  prom = pull --rebase origin master
  prum = pull --rebase upstream master
  po = push origin
  recent = for-each-ref --sort=-committerdate refs/heads/
  squash = rebase -i master --autosquash

  ; thanks Steve Losh (sjl):
  ; BEGIN KALEIDOSCOPE SECTION
  ; GAZE INTO THE ABYSS

  ; Find all commits in the given ref that aren't also in master
  ; TODO: Make this take a second optional argument
  find-unmerged-commits = "!sh -c 'git log $1 --format='''%H''' --not master --' -"
  find-unmerged-commits-for = "!sh -c 'git log $1 --format='''%H''' --not $2 --' -"

  ; ksdiff is the bare kaleidoscope difftool alias
  ; ksdiffid is the one that expects $KSID to be set
  ksdiff = difftool -y -t Kaleidoscope
  ksdiffid = difftool -y -t KaleidoscopeWithId

  ; ksdiffwith opens a diff of (current revision)->(given revision)
  ksdiffwith = "!sh -c 'git ksdiff HEAD..$1' -"

  ; ksshow will open a single specific commit in kaleidoscope
  ; it includes the commit log info as a separate file
  ksshow = "!sh -c 'export KSID=`uuidgen`; git log -n1 $1 > .git/LOG_MESSAGE_$KSID; ksdiff --partial-changeset --UUID $KSID -- /dev/null .git/LOG_MESSAGE_$KSID; git ksdiffid $1^..$1; ksdiff --mark-changeset-as-closed $KSID' -"

  ; ksreview takes a branch, finds all commits in that branch that aren't
  ; merged into master, and opens them one-by-one with ksshow.  It's good for
  ; reviewing pull requests.
  ksreview = "!sh -c 'git find-unmerged-commits $1 | xargs -n1 git ksshow' -"
  ksreviewfor = "!sh -c 'git find-unmerged-commits-for $1 $2 | xargs -n1 git ksshow' -"

  ; review takes a pull request URL and reviews it
  ; only works if you have the PR-fetching turned on and shit
  review = "!sh -c 'git fetch upstream && git ksreviewfor `echo $1 | sed -Ee \"s_.*pull/([0-9]+)_upstream/pull/\\1_\"` upstream/master' -"
	new = !git init && git symbolic-ref HEAD refs/heads/canon
	retcon = rebase
	op = blame
	clip-show = log
	fanfic = branch
	yeet = push
	yeet-retcon = push --force
	yoink = pull --rebase

  ; END KALEIDOSCOPE SECTION
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[commit]
  # gpgsign = true
